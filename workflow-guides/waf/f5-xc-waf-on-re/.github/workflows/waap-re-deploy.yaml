name: waap on re deploy
on:
  workflow_dispatch:
    inputs:
      msg: 
        description: 'infra'
        default: 'deploy'  

jobs:
  deploy:
  # This job deals with deployment Arcadia in Azure cloud
  runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform
    steps:
      - uses: actions/checkout@v3
      #- uses: dcarbone/install-jq-action@v1.0.1
      #- name: Set environment variable
      #  run: echo "VES_P12_PASSWORD=shubham9" >> $GITHUB_ENV
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Setup Terraform Backend for RE
        id: backend
        run: |
          cat > backend.tf << EOF
          terraform {
            cloud {
              organization = "${{ secrets.TF_CLOUD_ORGANIZATION }}"
              workspaces {
                name = "${{ secrets.TF_CLOUD_WORKSPACE_REWAAP_INFRA }}"
              }
            }
          }
          EOF

      - name: Setup Terraform Backend for VM
        id: backend2
        run: |
          cat > backend2.tf << EOF
          terraform {
            cloud {
              organization = "${{ secrets.TF_CLOUD_ORGANIZATION }}"
              workspaces {
                name = "${{ secrets.TF_CLOUD_WORKSPACE_VM }}"
              }
            }
          }
          EOF
          echo "${{secrets.P12}}" | base64 -d > api.p12
          
      - name: Deploy infra
        env:
          TF_VAR_azure_subscription_id: ${{ secrets.TF_VAR_AZURE_SUBSCRIPTION_ID }}
          TF_VAR_azure_subscription_tenant_id: ${{ secrets.TF_VAR_AZURE_SUBSCRIPTION_TENANT_ID }}
          TF_VAR_azure_service_principal_appid: ${{ secrets.TF_VAR_AZURE_SERVICE_PRINCIPAL_APPID }}
          TF_VAR_azure_service_principal_password: ${{ secrets.TF_VAR_AZURE_SERVICE_PRINCIPAL_PASSWORD }}
        run: | 
          mv backend.tf api.p12 terraform
          mv backend2.tf terraform/loadbalancer
          cd terraform
          terraform init
          terraform plan 
          terraform apply -auto-approve 
          #kubectl get nodes -o wide | awk '{print $6}' > tmp
          #ip=$(grep -o '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}' tmp)
          #kubectl get svc -o wide | grep frontend > tmp
          #port=$(grep -o '[0-9]\{5\}' tmp)
          #mv api.p12 loadbalancer
          #cd loadbalancer
          #terraform init
          #terraform plan -var private_ip=$ip -var port=$port 
          #terraform apply -auto-approve        
      #- name: Upload tfstate file
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: tfstate
      #   path: terraform/terraform.tfstate
